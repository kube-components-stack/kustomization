notifications:
  argocdUrl: https://argocd.k8s.lan
  enabled: true
server:
  ingress:
    enabled: true
    ingressClassName: nginx-01
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
    - argocd.k8s.lan
    tls:
    - secretName: argocd-tls-certificate
      hosts:
      - argocd.k8s.lan
  config:
    url: https://argocd.k8s.lan
    accounts.webhook: apiKey, login
    # oidc.config: |
    #   name: authentik
    #   issuer: http://authentik.k8s.lan/application/o/authorize/
    #   clientID: 8811b3aa63f19133ec84534482df81a5332dcfc1
    #   clientSecret: $oidc.authentik.clientSecret
    #   requestedScopes: ["openid", "profile", "email", "groups"]
  rbacConfig:
    # policy.csv: |
    #   g, ArgoCDAdmins, role:admin
    policy.default: role:readonly

    #   # Optional set of OIDC claims to request on the ID token.
    #   requestedIDTokenClaims: {"groups": {"essential": true}}

    # dex.config: |
    #   logger:
    #     level: debug
    #     format: json
    #   connectors:
    #   - 
    #     type: oidc
    #     id: authentik
    #     name: authentik
    #     config:
    #       issuer: http://authentik.k8s.lan/application/o/argocd/
    #       clientID: 8811b3aa63f19133ec84534482df81a5332dcfc1
    #       clientSecret: $oidc.authentik.clientSecret
## Argo Configs
configs:
  secret:
    # -- Create the argocd-secret
    createSecret: false