alertmanager:
  ingress:
    enabled: true
    ingressClassName: nginx-01
    annotations:
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
    - alertmanager.k8s.lan
    pathType: Prefix
    tls:
    - secretName: alertmanager-tls-certificate
      hosts:
      - alertmanager.k8s.lan
grafana:
  # https://grafana.com/docs/grafana/latest/administration/configuration/
  grafana.ini:
    # https://grafana.com/docs/grafana/next/setup-grafana/configure-security/configure-authentication/generic-oauth/
    auth.generic_oauth:
      enabled: true
      name: Keycloak
      allow_sign_up: "true"
      scopes: profile,email,groups
      client_id: grafana
      client_secret: aVe4VPmx2LJhyFTwleI2aJIgIIKlcEz7
      auth_url:   https://keycloak.k8s.lan/auth/realms/master/protocol/openid-connect/auth
      token_url:  https://keycloak.k8s.lan/auth/realms/master/protocol/openid-connect/token
      api_url:    https://keycloak.k8s.lan/auth/realms/master/protocol/openid-connect/userinfo
      role_attribute_path: contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-dev') && 'Editor' || 'Viewer'
      tls_skip_verify_insecure: "true"
      # role_attribute_path: contains(groups[*], 'GrafanaAdmins') && 'Admin' || 'Viewer'
      # empty_scopes: false
      # icon: signin
      # allowed_domains: keycloak.k8s.lan
      # tls_client_cert:
      # tls_client_key:
      # tls_client_ca:
      # use_pkce: true
  admin:
    existingSecret: grafana-secret
  persistence:
    size: 256Mi
  ingress:
    enabled: true
    ingressClassName: nginx-01
    annotations:
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
    - grafana.k8s.lan
    pathType: Prefix
    tls:
    - secretName: grafana-tls-certificate
      hosts:
      - grafana.k8s.lan
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx-01
    annotations:
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    hosts:
    - prometheus.k8s.lan
    pathType: Prefix
    tls:
    - secretName: prometheus-tls-certificate
      hosts:
      - prometheus.k8s.lan
  prometheusSpec:
    retention: 1d
    retentionSize: 1GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
