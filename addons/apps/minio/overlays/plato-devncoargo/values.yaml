existingSecret: bucket-s3
ingress:
  enabled: false
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    kubernetes.io/tls-acme: "true"
    # acme.cert-manager.io/http01-ingress-class: ingress-nginx-admin
  ingressClassName: ingress-nginx-admin
  hosts:
  - minio-api.admin.plato-devncoargo.dev-sbr.com
  tls:
  - secretName: minio-api-tls-certificate
    hosts:
    - minio-api.admin.plato-devncoargo.dev-sbr.com
consoleIngress:
  enabled: false
  annotations:
    kubernetes.io/tls-acme: "true"
    # acme.cert-manager.io/http01-ingress-class: ingress-nginx-admin
  ingressClassName: ingress-nginx-admin
  hosts:
  - minio-console.admin.plato-devncoargo.dev-sbr.com
  tls:
  - secretName: minio-console-tls-certificate
    hosts:
    - minio-console.admin.plato-devncoargo.dev-sbr.com
buckets:
    # Name of the bucket
  - name: loki
    # Policy to be set on the
    # bucket [none|download|upload|public]
    policy: public
    # Purge if bucket exists already
    purge: false
    # set versioning for
    versioning: ~ # true, false or ~ (standalone) 
    # Name of the bucket
  - name: logs
    # Policy to be set on the
    # bucket [none|download|upload|public]
    policy: public
    # Purge if bucket exists already
    purge: false
    # set versioning for
    versioning: ~ # true, false or ~ (standalone)