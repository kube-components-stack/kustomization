notifications:
  argocdUrl: https://argocd.admin.devncoargo.dev-sbr.com
  enabled: false
server:
  # volumeMounts:
  #    - name: certificate
  #      mountPath: /etc/ssl/certs/tls.crt #/etc/ssl/certs/ca.crt # your self-signed CA part inside the secret 
  #      subPath: tls.crt #ca.crt 
  # volumes:
  #    - name: certificate
  #      secret:
  #        secretName: keycloak-ca # argocd-tls-ca
  #        defaultMode: 420 
  ingress:
    enabled: true
    ingressClassName: ingress-nginx-admin
    annotations:
      kubernetes.io/tls-acme: "true"
      acme.cert-manager.io/http01-ingress-class: ingress-nginx-admin
      nginx.ingress.kubernetes.io/whitelist-source-range: "78.244.0.0/14,37.1.232.0/21,37.8.160.0/19,37.160.0.0/12"
    hosts:
    - argocd.admin.devncoargo.dev-sbr.com
    tls:
    - secretName: argocd-tls-certificate
      hosts:
      - argocd.admin.devncoargo.dev-sbr.com
  config:
    url: https://argocd.admin.devncoargo.dev-sbr.com
    # accounts.webhook: apiKey, login # authentik oauth ?
    # https://github.com/argoproj/argo-cd/issues/4344#issuecomment-890382825
    # https://github.com/argoproj/argo-cd/issues/1171
    # https://argo-cd.readthedocs.io/en/stable/user-guide/private-repositories/#self-signed-untrusted-tls-certificates
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/keycloak/
  #   oidc.config: |
  #     name: Keycloak
  #     issuer: https://keycloak.admin.devncoargo.dev-sbr.com/realms/master
  #     clientID: argocd
  #     clientSecret: $oidc.keycloak.clientSecret
  #     requestedScopes: ["openid", "profile", "email", "groups"]
  # rbacConfig:
  #   policy.csv: |
  #     g, ArgoCDAdmins, role:admin
  #   policy.default: role:readonly
configs:
  secret:
    # -- Create the argocd-secret
    createSecret: false